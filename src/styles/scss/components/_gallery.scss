@use '../abstracts';
@use '../base';

.gallery {

  // gallery component is desined in a way which has
  // varying no. of columns, height and gap
  // based on device view-port

  --gap: 2rem;
  --num-cols: 1;
  --row-height: 25rem;

  display: grid;
  gap: var(--gap);

  // on mobile (less than 45em) view-port single column
  grid-template-columns: repeat(var(--num-cols), 1fr);
  grid-auto-rows: var(--row-height);

  // on tablet (greater than 45em) view-port two column
  @media screen and (min-width:45em) {
    --num-cols: 2;
    --row-height: 20rem;
  }

  // on desktop (greater than 60em) view-port four column
  @media screen and (min-width:60em) {
    --num-cols: 4;
    --row-height: 20rem;
  }

  // on desktop (greater than 90em) view-port siz column
  @media screen and (min-width:90em) {
    --num-cols: 6;
  }
}

.gallery__block {

  // .gallery__block is parent of image and overlay text

  position: relative;
  // position relative so that overlay-text can be positioned 
  // relative of its parent

  &--img{
    object-fit: cover;
    width: 100%;
    height: 100%;
    cursor: pointer;
  }

  &--text-on-image {
    // to display "click to view" when hover 
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: black;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 150ms ease-in-out;

    @include abstracts.typography(
      $fontFamily:var(--ff-primary),
      $fontWeight: 700,
      $fontSize: var(--fs-400),
      $color: var(--clr-white),
      $lineHeight: 1.5,
      $textTransform: none
    );

    &:hover,
    &:focus {
      opacity: 0.6;
      cursor: pointer;
    }
  }
}

// these are helper classes for individual gallery__block
// to occupy varying no. of columns and rows for mosiac layout

// on medium screen size (view-port greater than 60em)
// x-cols-(a) : where "a" ranges between 1 and 4 
//              so that element will span across "a" columns
// x-rows-(a) : where "a" ranges between 1 and 2 
//              so that element will span across "a" rows
@media screen and (min-width:60em) {
  .m-cols-1 { grid-column: span 1; }
  .m-cols-2 { grid-column: span 2; }
  .m-cols-3 { grid-column: span 3; }
  .m-cols-4 { grid-column: span 4; }
  .m-rows-1 { grid-row: span 1; }
  .m-rows-2 { grid-row: span 2; }
}

// on large screen size (view-port greater than 90em)
// x-cols-(a) : where "a" ranges between 1 and 6 
//              so that element will span across "a" columns
// x-rows-(a) : where "a" ranges between 1 and 4 
//              so that element will span across "a" rows
@media screen and (min-width:90em) {
  .l-cols-1 { grid-column: span 1; }
  .l-cols-2 { grid-column: span 2; }
  .l-cols-3 { grid-column: span 3; }
  .l-cols-4 { grid-column: span 4; }
  .l-cols-5 { grid-column: span 5; }
  .l-cols-6 { grid-column: span 6; }
  .l-rows-1 { grid-row: span 1; }
  .l-rows-2 { grid-row: span 2; }
  .l-rows-3 { grid-row: span 3; }
  .l-rows-4 { grid-row: span 4; }
}
